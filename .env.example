# ==============================================================================
# DYNAMIC LINKS APPLICATION ENVIRONMENT CONFIGURATION
# ==============================================================================
#
# Default values are optimized for production to avoid having to configure
# much in production. However it should be easy to get going in development too.
# If you see an uncommented option that means it's either mandatory to set or
# it's being overwritten in development to make your life easier.

# ==============================================================================
# RAILS APPLICATION CONFIGURATION
# ==============================================================================

# Environment settings (development, test, production)
export RAILS_ENV=development
export NODE_ENV=development

# Generate a secure secret by running: ./run rails secret
# WARNING: This is an insecure key for development only.
# Generate a new one for production using: ./run rails secret
export SECRET_KEY_BASE=insecure_key_for_dev

# ==============================================================================
# RAILS APPLICATION SERVER CONFIGURATION
# ==============================================================================

# Puma server configuration
# The bind port for puma (default: 8000)
# WARNING: If you change this value you'll need to change 8000 in both
# your Dockerfile and in compose.yaml due to Docker Compose limitations
#export PORT=8000

# Worker and thread configuration
# WEB_CONCURRENCY defaults to server's CPU count * 2
# In development, use 1 to avoid race conditions when debugging
# In production, set these values according to your server's capacity
export WEB_CONCURRENCY=1
export RAILS_MAX_THREADS=1

# Host URL for Rails functionality requiring absolute URLs
# In production this should match your domain name (e.g., example.com)
#export URL_HOST=localhost:8000

# Whether Rails should serve static files from public/ in production
# Generally disabled in production as nginx typically handles static files
#export RAILS_SERVE_STATIC_FILES=

# ==============================================================================
# ACTION CABLE CONFIGURATION
# ==============================================================================

# Action Cable port (default: 28080)
# WARNING: If you change this value you'll need to update compose.yaml
#export CABLE_PORT=28080

# Action Cable frontend URL
# In production, typically reverse proxied to a subdomain with nginx
# Example: ws://cable.example.com
#export ACTION_CABLE_FRONTEND_URL=ws://localhost:28080

# Action Cable allowed request origins (comma-separated RegExp patterns)
# Examples:
#   http:\/\/localhost*
#   http:\/\/example.*,https:\/\/example.*
#export ACTION_CABLE_ALLOWED_REQUEST_ORIGINS=http:\/\/localhost*

# ==============================================================================
# DOCKER COMPOSE CONFIGURATION
# ==============================================================================

# Enable BuildKit for improved Docker builds
# https://docs.docker.com/develop/develop-images/build_enhancements
# Comment out if you experience compatibility issues with your Docker version
export DOCKER_BUILDKIT=1

# Project name (instead of using directory name)
export COMPOSE_PROJECT_NAME=rails_dynamic_links

# Service profiles to run
# Development: All services including asset watchers
# Production: Exclude asset watchers as assets are built into the image
export COMPOSE_PROFILES=postgres,redis,assets,web,worker,cable

# User ID and Group ID for Docker
# Set these if your uid:gid isn't 1000:1000 (check with `id` command)
#export UID=1000
#export GID=1000

# ==============================================================================
# DOCKER CONTAINER CONFIGURATION
# ==============================================================================

# Container restart policy
# Use 'no' for development, 'unless-stopped' or 'always' for production
export DOCKER_RESTART_POLICY=no

# Health check configuration
# In development, use /bin/true to avoid log spam
# In production, use: curl localhost:8000/up
export DOCKER_WEB_HEALTHCHECK_TEST=/bin/true

# Port forwarding configuration
# Web server port mapping to Docker host
export DOCKER_WEB_PORT_FORWARD=8000

# Action Cable port mapping to Docker host
export DOCKER_CABLE_PORT_FORWARD=28080

# Volume mounting configuration
# Development: Mount entire project for live code changes
# Production: Mount only public directory
export DOCKER_WEB_VOLUME=.:/app

# ==============================================================================
# DOCKER RESOURCE CONSTRAINTS
# ==============================================================================
# Set to 0 to use unlimited resources

#export DOCKER_POSTGRES_CPUS=0
#export DOCKER_POSTGRES_MEMORY=0
#export DOCKER_REDIS_CPUS=0
#export DOCKER_REDIS_MEMORY=0
#export DOCKER_WEB_CPUS=0
#export DOCKER_WEB_MEMORY=0
#export DOCKER_WORKER_CPUS=0
#export DOCKER_WORKER_MEMORY=0
#export DOCKER_CABLE_CPUS=0
#export DOCKER_CABLE_MEMORY=0

# ==============================================================================
# DATABASE CONFIGURATION (POSTGRESQL + CITUS)
# ==============================================================================

# PostgreSQL connection settings
# WARNING: Using weak password for development only. Use a strong password in production.
export POSTGRES_DB=dynamic_links_development
export POSTGRES_USER=postgres
export POSTGRES_PASSWORD=postgres
export POSTGRES_HOST=citus
export POSTGRES_PORT=5432

# Database URL (constructed from above values)
# Note: This should match the values above. Update if you change the individual values.
export DATABASE_URL=postgres://postgres:postgres@citus:5432/dynamic_links_development

# Enable Citus distributed PostgreSQL extension
export CITUS_ENABLED=true

# ==============================================================================
# REDIS CONFIGURATION
# ==============================================================================

# Redis connection settings
# Used for caching, Sidekiq, and Action Cable
# Note: Update this if you change the Redis host or port
export REDIS_URL=redis://redis:6379/1
export REDIS_HOST=redis
