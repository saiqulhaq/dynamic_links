name: Unit Tests

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: dynamic_links_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "yarn"

      - name: Cache Yarn dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.yarn/berry/cache
            ~/.cache/yarn
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.4.4"
          bundler-cache: true

      - name: Cache bundle dependencies
        uses: actions/cache@v4
        with:
          path: |
            vendor/bundle
            ~/.bundle
          key: ${{ runner.os }}-bundler-main-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-bundler-main-

      - name: Install gem dependencies
        run: |
          gem install bundler
          bundle config set --local deployment 'true'
          bundle config set --local path 'vendor/bundle'

      - name: Install JavaScript dependencies
        run: yarn install --frozen-lockfile

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: |
            app/assets/builds
            public/assets
          key: ${{ runner.os }}-assets-${{ hashFiles('app/javascript/**/*', 'app/assets/stylesheets/**/*', 'package.json', 'yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-assets-

      - name: Install bundle dependencies
        run: bundle install --jobs 4 --retry 3

      - name: Run tests
        env:
          RAILS_ENV: test
          POSTGRES_DB: dynamic_links_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          RAILS_MAX_THREADS: 5
          SHORTENING_STRATEGY: md5
          REDIS_HOST: localhost
          REDIS_URL: redis://localhost:6379/0
          SECRET_KEY_BASE: test_secret_key_base_for_ci_environment
        run: |
          bundle exec rails db:drop db:create db:migrate
          bundle exec rails db:test:prepare
          yarn build
          yarn build:css
          bundle exec rails test

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: coverage/
