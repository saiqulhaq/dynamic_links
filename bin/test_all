#!/bin/bash

# Test runner script for main app and all engines
# Usage: ./bin/test_all [options]

set -e  # Exit on any error

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# Function to run tests for a specific component
run_tests() {
    local component=$1
    local test_path=$2
    local description=$3

    print_status "Running tests for $description..."
    echo "========================================"

    if [ -d "$test_path" ]; then
        cd "$test_path"

        # Check if tests directory exists
        if [ -d "test" ]; then
            # Try to find the appropriate rails command
            if [ -f "bin/rails" ]; then
                # Use local bin/rails if it exists
                if bin/rails test; then
                    print_success "$description tests passed"
                else
                    print_error "$description tests failed"
                    return 1
                fi
            else
                # For engines without their own bin/rails, use rails directly from within the directory
                if rails test; then
                    print_success "$description tests passed"
                else
                    print_error "$description tests failed"
                    return 1
                fi
            fi
        else
            print_warning "No test directory found for $description"
        fi

        # Return to workspace root
        cd /workspace
    else
        print_warning "$description path not found: $test_path"
    fi

    echo ""
}

# Main execution
main() {
    local failed_components=()
    local start_time=$(date +%s)

    print_status "Starting comprehensive test suite..."
    print_status "Working directory: $(pwd)"
    echo ""

    # Test main application
    if ! run_tests "main_app" "/workspace" "Main Application"; then
        failed_components+=("Main Application")
    fi

    # Test engines
    for engine_dir in /workspace/engines/*/; do
        if [ -d "$engine_dir" ]; then
            engine_name=$(basename "$engine_dir")
            if ! run_tests "$engine_name" "$engine_dir" "Engine: $engine_name"; then
                failed_components+=("Engine: $engine_name")
            fi
        fi
    done

    # Summary
    local end_time=$(date +%s)
    local duration=$((end_time - start_time))

    echo "========================================"
    print_status "Test Summary"
    echo "========================================"
    print_status "Total execution time: ${duration}s"

    if [ ${#failed_components[@]} -eq 0 ]; then
        print_success "All tests passed! ✅"
        exit 0
    else
        print_error "Some tests failed! ❌"
        echo ""
        print_error "Failed components:"
        for component in "${failed_components[@]}"; do
            echo "  - $component"
        done
        exit 1
    fi
}

# Parse command line arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        -h|--help)
            echo "Usage: $0 [options]"
            echo ""
            echo "Options:"
            echo "  -h, --help     Show this help message"
            echo ""
            echo "This script runs tests for:"
            echo "  - Main Rails application"
            echo "  - All engines in the engines/ directory"
            echo ""
            exit 0
            ;;
        *)
            print_error "Unknown option: $1"
            echo "Use -h or --help for usage information"
            exit 1
            ;;
    esac
    shift
done

# Run main function
main
