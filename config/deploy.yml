# Name of your application. Used to uniquely configure containers.
service: dynamic-links

# Name of the container image.
image: saiqulhaq/dynamic_links

# Deploy to these servers.
servers:
  web:
    - <%= ENV["SERVER_HOST"] %>
  # job:
  #   hosts:
  #     - 192.168.0.1
  #   cmd: bin/jobs

# Enable SSL auto certification via Let's Encrypt and allow for multiple apps on a single web server.
# Remove this section when using multiple web servers and ensure you terminate SSL at your load balancer.
#
# Note: If using Cloudflare, set encryption mode in SSL/TLS setting to "Full" to enable CF-to-app encryption.
proxy:
  ssl: true
  app_port: 8000

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  username: saiqulhaq

  # Always use an access token rather than real password (pulled from .kamal/secrets).
  password:
    - KAMAL_REGISTRY_PASSWORD

# Configure builder setup.
builder:
  arch: amd64
  # Pass in additional build args needed for your Dockerfile.
  # args:
  #   RUBY_VERSION: <%= ENV["RBENV_VERSION"] || ENV["rvm_ruby_string"] || "#{RUBY_ENGINE}-#{RUBY_ENGINE_VERSION}" %>
# Inject ENV variables into containers (secrets come from .kamal/secrets).
env:
  clear:
    RAILS_ENV: production
    NODE_ENV: production
    PORT: 8000
    WEB_CONCURRENCY: 2
    RAILS_MAX_THREADS: 5
    URL_HOST: linkwizard.dev
    RAILS_SERVE_STATIC_FILES: true
    CABLE_PORT: 28080
    ACTION_CABLE_FRONTEND_URL: wss://linkwizard.dev/cable
    ACTION_CABLE_ALLOWED_REQUEST_ORIGINS: https:\/\/linkwizard\.dev
    POSTGRES_HOST: dynamic-links-db
    POSTGRES_PORT: 5432
    POSTGRES_DB: rails_dynamic_links
    POSTGRES_USER: rails_dynamic_links_user
    REDIS_URL: redis://dynamic-links-redis:6379/1
    REDIS_HOST: dynamic-links-redis
    ELASTIC_APM_ENABLED: false
    ELASTIC_APM_SERVICE_NAME: rails-dynamic-links
    ELASTIC_APM_ENVIRONMENT: production
  secret:
    - RAILS_MASTER_KEY
    - SECRET_KEY_BASE
    - POSTGRES_PASSWORD

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal app logs -r job" will tail logs from the first server in the job section.
#
aliases:
  shell: app exec --interactive --reuse "bash"
  console: app exec --interactive --reuse "bin/rails console"

# Use a different ssh user than root
#
# ssh:
#   user: app

# Use a persistent storage volume.
#
# volumes:
#   - "app_storage:/app/storage"

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
#
# asset_path: /app/public/assets

# Configure rolling deploys by setting a wait time between batches of restarts.
#
# boot:
#   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
#   wait: 2

# Use accessory services (secrets come from .kamal/secrets).
#
accessories:
  db:
    image: postgres:16
    host: <%= ENV["SERVER_HOST"] %>
    port: 5432
    env:
      clear:
        POSTGRES_DB: rails_dynamic_links_production
        POSTGRES_USER: rails_dynamic_links_user
      secret:
        - POSTGRES_PASSWORD
    # files:
    #   - db/production.sql:/docker-entrypoint-initdb.d/setup.sql
    directories:
      - data:/var/lib/postgresql/data
  redis:
    image: redis:latest
    host: <%= ENV["SERVER_HOST"] %>
    port: 6379
    directories:
      - /var/lib/redis:/data
